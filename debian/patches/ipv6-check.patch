Subject: IPv6addr: Check for netinet/icmp6.h instead of  linux/icmpv6.h
Date: Tue, 25 Dec 2007 13:51:34 +0900
To: linux-ha-dev@lists.linux-ha.org
Cc: Tuomo Soini <tis@foobar.fi>
From: Simon Horman <horms@verge.net.au>

Configure currently checks for asm/types.h+netinet/icmp6.h,
however this check fails on debian ia64. Changing the check
to sys/types.h+netinet/icmp6.h resolves the problem for Debian,
but breaks RHEL 4.

http://developerbugs.linux-foundation.org/show_bug.cgi?id=1660

This revised check looks for sys/types.h+netinet/icmp6.h which
is more or less what resources/OCF/IPv6addr.c actually uses,
so hopefully this check keeps all the relevant parties happy.

Tuomo, could you check this patch and see if it causes you pain?

Cc: Tuomo Soini <tis@foobar.fi>
Signed-off-by: Simon Horman <horms@verge.net.au>

Index: heartbeat/configure.in
===================================================================
--- heartbeat.orig/configure.in	2007-12-25 13:24:20.000000000 +0900
+++ heartbeat/configure.in	2007-12-25 13:44:26.000000000 +0900
@@ -1099,9 +1099,9 @@ fi
 CPPFLAGS="$CPPFLAGS $XML2HEAD"
 
 dnl ************************************************************************
-dnl * Check for linux/icmpv6.h to make enable the IPv6addr resource agent
-AC_CHECK_HEADERS(linux/icmpv6.h,[],[],[#include <asm/types.h>])
-AM_CONDITIONAL(USE_IPV6ADDR, test "$ac_cv_header_linux_icmpv6_h" = yes -a $new_libnet = yes )
+dnl * Check for netinet/icmp6.h to enable the IPv6addr resource agent
+AC_CHECK_HEADERS(netinet/icmp6.h,[],[],[#include <sys/types.h>])
+AM_CONDITIONAL(USE_IPV6ADDR, test "$ac_cv_header_netinet_icmp6_h" = yes -a $new_libnet = yes )
 AC_CHECK_HEADERS(libxml/xpath.h)
 
 dnl
